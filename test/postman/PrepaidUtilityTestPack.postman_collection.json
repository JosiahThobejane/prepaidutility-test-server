{
	"variables": [],
	"info": {
		"name": "Prepaid Utility Test Pack",
		"_postman_id": "d68c17a8-327c-d488-aa12-2fd37162be55",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Fault reports",
			"description": "",
			"item": [
				{
					"name": "FaultReport",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"requestId\",uuid());\npostman.setEnvironmentVariable(\"senderTranRef\",_p8());\npostman.setEnvironmentVariable(\"clientTranRef\",_p8());\n\n"
							}
						}
					],
					"request": {
						"url": "{{host}}/prepaidutility/v1/faultReports/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"meter\": {\n    \t\"meterId\": \"{{meterId}}\"\n    },\n    \"faultType\": \"KeepsTripping\",\n    \"contactNumber\": \"082134567\",\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Key change requests",
			"description": "",
			"item": [
				{
					"name": "KeyChangeTokenRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"requestId\",uuid());\npostman.setEnvironmentVariable(\"senderTranRef\",_p8());\npostman.setEnvironmentVariable(\"clientTranRef\",_p8());\n\n"
							}
						}
					],
					"request": {
						"url": "{{host}}/prepaidutility/v1/keyChangeTokenRequests/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"meter\": {\n    \t\"meterId\": \"{{meterId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Lookup-purchase-confirm",
			"description": "",
			"item": [
				{
					"name": "1_MeterLookupRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;\n\npostman.setEnvironmentVariable(\"requestAmount\", jsonData.minAmount.amount);\n\npostman.setNextRequest(\"2_PurchaseRequest\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"requestId\",uuid());\npostman.setEnvironmentVariable(\"senderTranRef\",_p8());\npostman.setEnvironmentVariable(\"clientTranRef\",_p8());\n\n"
							}
						}
					],
					"request": {
						"url": "{{host}}/prepaidutility/v1/meterLookups/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"meter\": {\n    \t\"meterId\": \"{{meterId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "2_PurchaseRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;\n\npostman.setEnvironmentVariable(\"thirdPartyId1\", jsonData.thirdPartyIdentifiers[0].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef1\", jsonData.thirdPartyIdentifiers[0].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId2\", jsonData.thirdPartyIdentifiers[1].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef2\", jsonData.thirdPartyIdentifiers[1].transactionIdentifier);\n\npostman.setNextRequest(\"3_ConfirmationAdvice\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"requestId\",uuid());\n\n"
							}
						}
					],
					"request": {
						"url": "{{host}}/prepaidutility/v1/tokenPurchases/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"purchaseAmount\": {\n\t\t\"amount\": \"{{requestAmount}}\",\n\t\t\"currency\": \"{{currency}}\"\n\t},\n    \"meter\": {\n    \t\"meterId\": \"{{meterId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "3_ConfirmationAdvice",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nfunction halve(n) {\n    \n    return Math.floor(n/2);\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"adviceDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"confirmationId\",uuid());\npostman.setEnvironmentVariable(\"tenderAmount\",environment.requestAmount);\n"
							}
						}
					],
					"request": {
						"url": "{{host}}/prepaidutility/v1/tokenPurchases/{{requestId}}/confirmations/{{confirmationId}}",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\" : \"{{confirmationId}}\",\n  \"requestId\" : \"{{requestId}}\",\n  \"time\" : \"{{adviceDateTime}}\",\n  \"tenders\" : [ {\n    \"accountType\" : \"{{tenderAccountType}}\",\n    \"amount\" : {\n      \"amount\" : {{tenderAmount}},\n      \"currency\" : \"{{currency}}\"\n    },\n    \"cardNumber\" : \"{{tenderCardNumber}}\",\n    \"tenderType\" : \"{{tenderTypeCard}}\"\n  } \n  ],\n  \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Lookup-purchase-reverse",
			"description": "",
			"item": [
				{
					"name": "1_MeterLookupRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;\n\npostman.setEnvironmentVariable(\"requestAmount\", jsonData.minAmount.amount);\n\npostman.setNextRequest(\"2_PurchaseRequest\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"requestId\",uuid());\npostman.setEnvironmentVariable(\"senderTranRef\",_p8());\npostman.setEnvironmentVariable(\"clientTranRef\",_p8());\n\n"
							}
						}
					],
					"request": {
						"url": "{{host}}/prepaidutility/v1/meterLookups/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"meter\": {\n    \t\"meterId\": \"{{meterId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "2_PurchaseRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;\n\npostman.setEnvironmentVariable(\"thirdPartyId1\", jsonData.thirdPartyIdentifiers[0].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef1\", jsonData.thirdPartyIdentifiers[0].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId2\", jsonData.thirdPartyIdentifiers[1].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef2\", jsonData.thirdPartyIdentifiers[1].transactionIdentifier);\n\npostman.setNextRequest(\"3_ReversalAdvice\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"requestId\",uuid());\n\n"
							}
						}
					],
					"request": {
						"url": "{{host}}/prepaidutility/v1/tokenPurchases/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"purchaseAmount\": {\n\t\t\"amount\": \"{{requestAmount}}\",\n\t\t\"currency\": \"{{currency}}\"\n\t},\n    \"meter\": {\n    \t\"meterId\": \"{{meterId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "3_ReversalAdvice",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nfunction halve(n) {\n    \n    return Math.floor(n/2);\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"adviceDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"reversalId\",uuid());\n"
							}
						}
					],
					"request": {
						"url": "{{host}}/prepaidutility/v1/tokenPurchases/{{requestId}}/reversals/{{reversalId}}",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\" : \"{{reversalId}}\",\n  \"requestId\" : \"{{requestId}}\",\n  \"time\" : \"{{adviceDateTime}}\",\n  \"reversalReason\" : \"CANCELLED\",\n  \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Lookup-timeout-retry-confirm",
			"description": "",
			"item": [
				{
					"name": "1_MeterLookupRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;\n\npostman.setEnvironmentVariable(\"requestAmount\", jsonData.minAmount.amount);\n\npostman.setNextRequest(\"2_PurchaseRequest\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"requestId\",uuid());\npostman.setEnvironmentVariable(\"senderTranRef\",_p8());\npostman.setEnvironmentVariable(\"clientTranRef\",_p8());\n\n"
							}
						}
					],
					"request": {
						"url": "{{host}}/prepaidutility/v1/meterLookups/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"meter\": {\n    \t\"meterId\": \"{{timeoutMeterId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "2_PurchaseRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 504\"] = responseCode.code === 504;\n\npostman.setNextRequest(\"3_RetryRequest\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"requestId\",uuid());\n\n"
							}
						}
					],
					"request": {
						"url": "{{host}}/prepaidutility/v1/tokenPurchases/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"purchaseAmount\": {\n\t\t\"amount\": \"{{requestAmount}}\",\n\t\t\"currency\": \"{{currency}}\"\n\t},\n    \"meter\": {\n    \t\"meterId\": \"{{timeoutMeterId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "3_RetryRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;\n\npostman.setEnvironmentVariable(\"thirdPartyId1\", jsonData.thirdPartyIdentifiers[0].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef1\", jsonData.thirdPartyIdentifiers[0].transactionIdentifier);\n\npostman.setEnvironmentVariable(\"thirdPartyId2\", jsonData.thirdPartyIdentifiers[1].institutionId);\npostman.setEnvironmentVariable(\"thirdPartyTranRef2\", jsonData.thirdPartyIdentifiers[1].transactionIdentifier);\n\npostman.setNextRequest(\"4_ConfirmationAdvice\");"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"retryId\",uuid());\n\n"
							}
						}
					],
					"request": {
						"url": "{{host}}/prepaidutility/v1/tokenPurchases/{{requestId}}/retries/{{retryId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"purchaseAmount\": {\n\t\t\"amount\": \"{{requestAmount}}\",\n\t\t\"currency\": \"{{currency}}\"\n\t},\n    \"meter\": {\n    \t\"meterId\": \"{{timeoutMeterId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{retryId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "4_ConfirmationAdvice",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 202\"] = responseCode.code === 202;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nfunction halve(n) {\n    \n    return Math.floor(n/2);\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"adviceDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"confirmationId\",uuid());\npostman.setEnvironmentVariable(\"tenderAmount\",environment.requestAmount);\n"
							}
						}
					],
					"request": {
						"url": "{{host}}/prepaidutility/v1/tokenPurchases/{{requestId}}/confirmations/{{confirmationId}}",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\" : \"{{confirmationId}}\",\n  \"requestId\" : \"{{requestId}}\",\n  \"time\" : \"{{adviceDateTime}}\",\n  \"tenders\" : [ {\n    \"accountType\" : \"{{tenderAccountType}}\",\n    \"amount\" : {\n      \"amount\" : {{tenderAmount}},\n      \"currency\" : \"{{currency}}\"\n    },\n    \"cardNumber\" : \"{{tenderCardNumber}}\",\n    \"tenderType\" : \"{{tenderTypeCard}}\"\n  } \n  ],\n  \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{thirdPartyId1}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef1}}\"\n        },\n        {\n            \"institutionId\": \"{{thirdPartyId2}}\",\n            \"transactionIdentifier\": \"{{thirdPartyTranRef2}}\"\n        }\n    ]\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Meter lookups",
			"description": "",
			"item": [
				{
					"name": "Successful meter lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 201\"] = responseCode.code === 201;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Correct id returned\"] = jsonData.id === environment.requestId;"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"requestId\",uuid());\npostman.setEnvironmentVariable(\"senderTranRef\",_p8());\npostman.setEnvironmentVariable(\"clientTranRef\",_p8());\n\n"
							}
						}
					],
					"request": {
						"url": "{{host}}/prepaidutility/v1/meterLookups/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"meter\": {\n    \t\"meterId\": \"{{meterId}}\"\n    },\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Unuccessful meter lookup",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar jsonData = JSON.parse(responseBody);\n\ntests[\"Correct error type returned\"] = jsonData.errorType === \"UNKNOWN_CUSTOMER_ACCOUNT\";\n"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "function _p8(s) {\n        var p = (Math.random().toString(16)+\"000000000\").substr(2,8);\n        return s ? \"-\" + p.substr(0,4) + \"-\" + p.substr(4,4) : p ;\n    }\n\nfunction uuid() {\n    \n    return _p8() + _p8(true) + _p8(true) + _p8();\n}\n\nvar dateTime = new Date().toISOString();\npostman.setEnvironmentVariable(\"reqDateTime\", dateTime);\n\npostman.setEnvironmentVariable(\"requestId\",uuid());\npostman.setEnvironmentVariable(\"senderTranRef\",_p8());\npostman.setEnvironmentVariable(\"clientTranRef\",_p8());\n\n"
							}
						}
					],
					"request": {
						"url": "{{host}}/prepaidutility/v1/meterLookups/{{requestId}}",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic dGVzdDp0ZXN0",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"meter\": {\n    \t\"meterId\": \"9999\"\n    },\n    \"client\": {\n        \"id\": \"{{clientId}}\",\n        \"name\": \"{{clientName}}\"\n    },\n    \"id\": \"{{requestId}}\",\n    \"originator\": {\n        \"institution\": {\n            \"id\": \"{{senderInstId}}\",\n            \"name\": \"{{senderInstName}}\"\n        },\n        \"merchant\": {\n            \"merchantId\": \"{{merchantId}}\",\n            \"merchantName\": {\n                \"city\": \"{{merchantCity}}\",\n                \"country\": \"{{merchantCountry}}\",\n                \"name\": \"{{merchantName}}\",\n                \"region\": \"{{merchantRegion}}\"\n            },\n            \"merchantType\": \"{{merchantType}}\"\n        },\n        \"terminalId\": \"{{terminalId}}\"\n    },\n    \"reciever\": {\n        \"id\": \"{{receiverId}}\",\n        \"name\": \"{{receiverName}}\"\n    },\n    \"settlementEntity\": {\n        \"id\": \"{{settlementEntityId}}\",\n        \"name\": \"{{settlementEntityName}}\"\n    },\n    \"thirdPartyIdentifiers\": [\n        {\n            \"institutionId\": \"{{senderInstId}}\",\n            \"transactionIdentifier\": \"{{senderTranRef}}\"\n        },\n        {\n            \"institutionId\": \"{{clientId}}\",\n            \"transactionIdentifier\": \"{{clientTranRef}}\"\n        }\n    ],\n    \"time\": \"{{reqDateTime}}\"\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}